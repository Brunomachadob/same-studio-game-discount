{"version":3,"sources":["data/mock.ts","components/Library.tsx","components/Store.tsx","models/Rule.ts","components/Rules.tsx","business/RuleDescriptionEvaluator.ts","business/RuleMatcher.ts","business/DiscountCalculator.ts","App.tsx","index.tsx"],"names":["ALL_GAMES","id","name","price","studioId","franchise","tags","useStyles","makeStyles","theme","createStyles","root","studio","fontSize","gameContainer","display","flexWrap","game","margin","spacing","minWidth","height","Library","games","onRemoveGame","classes","Paper","elevation","className","Typography","variant","map","Card","key","CardContent","color","component","CardActions","Button","size","onClick","RuleType","currencyFormat","Intl","NumberFormat","style","currency","Store","onBuyGame","format","rulesContainer","rule","Rules","rules","type","SAME_STUDIO","percentage","maxPercentage","SAME_FRANCHISE","CONTAINS_TAG","options","join","evaluateRuleDescription","countMatches","storeGame","library","reduce","currentMatches","libraryGame","ruleType","gameA","gameB","sameStudio","findIndex","gameTag","includes","containsTag","calculateNewPrice","percentages","matchCount","Math","min","sort","length","calculatePercentage","flexGrow","padding","title","App","useState","storeGames","setStoreGames","libraryGames","setLibraryGames","useEffect","libraryGameIds","filter","storeGamesWithDiscount","AppBar","position","Toolbar","IconButton","edge","aria-label","target","href","libGames","concat","libGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.57eeac83.chunk.js","sourcesContent":["import { Game } from '../models/Game';\n\nexport const ALL_GAMES: Game[] = [\n    { id: '1', name: 'Matrix 1', price: 10, studioId: 'Universal', franchise: 'matrix', tags: ['rpg'] },\n    { id: '2', name: 'Matrix 2', price: 10.5, studioId: 'Universal', franchise: 'matrix', tags: ['rpg', 'open-world'] },\n    { id: '3', name: 'Matrix 3', price: 20, studioId: 'Universal', franchise: 'matrix', tags: ['rpg', 'open-world'] },\n\n    { id: '4', name: 'Elder Scrolls', price: 40, studioId: 'Bethesda', franchise: 'elder-scrolls', tags: ['rpg', 'open-world'] },\n    { id: '5', name: 'Elder Scrolls 2', price: 50, studioId: 'Bethesda', franchise: 'elder-scrolls', tags: ['rpg', 'open-world'] },\n    { id: '6', name: 'Elder Scrolls 3', price: 60, studioId: 'Bethesda', franchise: 'elder-scrolls', tags: ['rpg', 'open-world'] },\n];\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { Game } from '../models/Game';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \n    },\n    studio: {\n      fontSize: 14,\n    },\n    gameContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    game: {\n      margin: theme.spacing(1),\n      minWidth: theme.spacing(16),\n      height: theme.spacing(20),\n    }\n  }),\n);\n\ninterface Props {\n    games: Game[];\n    onRemoveGame: (game: Game) => void;\n}\n\nexport default function Library({ games, onRemoveGame }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Typography variant=\"h4\">Library</Typography>\n      <div className={classes.gameContainer}>\n        {\n            games.map((game: Game) => \n              <Card key={game.id} elevation={3} className={classes.game}>\n                <CardContent>\n                <Typography className={classes.studio} color=\"textSecondary\">\n                    {game.studioId}\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {game.name}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" onClick={() => onRemoveGame(game)}>Destroy</Button>\n                </CardActions>\n              </Card>\n            )\n        }\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { Game } from '../models/Game';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \n    },\n    studio: {\n      fontSize: 14,\n    },\n    gameContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    game: {\n      margin: theme.spacing(1),\n      minWidth: theme.spacing(20),\n      height: theme.spacing(20),\n    }\n  }),\n);\n\nconst currencyFormat = new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' })\n\ninterface Props {\n    games: Game[];\n    onBuyGame: (game: Game) => void;\n}\n\nexport default function Store({ games, onBuyGame }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Typography variant=\"h4\">Store</Typography>\n      <div className={classes.gameContainer}>\n        {\n            games.map((game: Game) =>\n              <Card key={game.id} elevation={3} className={classes.game}>\n                <CardContent>\n                  <Typography className={classes.studio} color=\"textSecondary\">\n                    {game.studioId}\n                  </Typography>\n                  <Typography variant=\"h5\" component=\"h2\">\n                    {game.name}\n                  </Typography>\n                  <Typography color=\"textSecondary\">\n                    {currencyFormat.format(game.price)}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" onClick={() => onBuyGame(game)}>Buy</Button>\n                </CardActions>\n              </Card>\n            )\n        }\n      </div>\n    </Paper>\n  );\n}\n","export enum RuleType {\n    SAME_STUDIO,\n    SAME_FRANCHISE,\n    CONTAINS_TAG,\n};\n\nexport interface Rule {\n    id: string;\n    studioId: string;\n    type: RuleType;\n    percentage: number;\n    maxPercentage: number;\n    options?: ContainsTagOption\n};\n\nexport interface ContainsTagOption {\n    tags: string[];\n};","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport { Rule } from '../models/Rule';\nimport { evaluateRuleDescription } from '../business/RuleDescriptionEvaluator';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \n    },\n    rulesContainer: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    rule: {\n      margin: theme.spacing(1),\n    }\n  }),\n);\n\ninterface Props {\n    rules: Rule[];\n}\n\nexport default function Rules({ rules }: Props) {\n  const classes = useStyles();\n\n  return (\n    <Paper elevation={0} className={classes.root}>\n      <Typography variant=\"h4\">Rules</Typography>\n      <div className={classes.rulesContainer}>\n        {\n            rules.map((rule: Rule) => \n              <Card key={rule.id} elevation={3} className={classes.rule}>\n                <CardContent>\n                  <Typography>\n                    {rule.studioId}\n                  </Typography>\n                  <Typography>\n                    {evaluateRuleDescription(rule)}\n                  </Typography>\n                </CardContent>\n              </Card>\n            )\n        }\n      </div>\n    </Paper>\n  );\n}\n","import { RuleType, Rule } from \"../models/Rule\";\n\nexport function evaluateRuleDescription(rule: Rule) {\n    switch(rule.type) {\n        case RuleType.SAME_STUDIO:\n            return `${rule.percentage}% discount per game of the same studio you own, up to ${rule.maxPercentage}%`;\n        case RuleType.SAME_FRANCHISE:\n            return `${rule.percentage}% discount per game of the same studio and franchise you own, up to ${rule.maxPercentage}%`;\n        case RuleType.CONTAINS_TAG:\n            return `${rule.percentage}% discount per game of the same studio and with tags '${rule.options?.tags?.join(' or ')}' you own, up to ${rule.maxPercentage}%`;\n    }\n}\n","import { Game } from \"../models/Game\";\nimport { ContainsTagOption, Rule, RuleType } from \"../models/Rule\";\n\nexport function countMatches(\n    rule: Rule,\n    storeGame: Game,\n    library: Game[]\n): number {\n    return library.reduce((currentMatches, libraryGame) => {\n        const matchesRule = storeGame.studioId === rule.studioId\n            && (sameStudio(rule.type, storeGame, libraryGame)\n            || sameFranchise(rule.type, storeGame, libraryGame)\n            || containsTag(rule.type, rule.studioId, libraryGame, rule.options as ContainsTagOption))\n\n        return currentMatches + (matchesRule ? 1 : 0)  \n    }, 0);\n}\n\nfunction sameStudio(ruleType: RuleType, gameA: Game, gameB: Game) {\n    return ruleType === RuleType.SAME_STUDIO && gameA.studioId === gameB.studioId\n}\n\nfunction sameFranchise(ruleType: RuleType, gameA: Game, gameB: Game) {\n    return ruleType === RuleType.SAME_FRANCHISE \n        && sameStudio(RuleType.SAME_STUDIO, gameA, gameB) \n        && gameA.franchise === gameB.franchise;\n}\n\nfunction containsTag(ruleType: RuleType, studioId: string, game: Game, options: ContainsTagOption) {\n    return ruleType === RuleType.CONTAINS_TAG\n        && game.studioId === studioId\n        && game.tags.findIndex((gameTag) => options.tags.includes(gameTag)) > -1;\n}\n","import { Rule } from \"../models/Rule\";\nimport { Game } from \"../models/Game\";\nimport { countMatches } from \"./RuleMatcher\";\n\nexport function applyDiscounts(\n    rules: Rule[],\n    store: Game[],\n    library: Game[]\n): Game[] {\n    return store.map((storeGame) => ({\n        ...storeGame,\n        price: calculateNewPrice(rules, storeGame, library)\n    }));\n}\n\nfunction calculateNewPrice(\n    rules: Rule[],\n    game: Game,\n    library: Game[]\n): number {\n    const percentage = calculatePercentage(rules, game, library);\n\n    return game.price - (game.price * percentage / 100);\n}\n\nfunction calculatePercentage(\n    rules: Rule[],\n    game: Game,\n    library: Game[]\n): number {\n    const percentages = rules.map((rule) => {\n        const matchCount = countMatches(rule, game, library) || 0;\n\n        return Math.min(matchCount * rule.percentage, rule.maxPercentage);\n    }).sort();\n\n    return percentages.length ? percentages[percentages.length - 1] : 0;\n}\n\n","import React, { useState, useEffect } from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport GitHubIcon from '@material-ui/icons/GitHub';\n\nimport { Game } from './models/Game';\nimport { ALL_GAMES } from './data/mock';\n\nimport Library from './components/Library';\nimport Store from './components/Store';\nimport Rules from './components/Rules';\n\nimport { applyDiscounts } from './business/DiscountCalculator';\nimport { Rule, RuleType } from './models/Rule';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(1),\n      '& > *': {\n        margin: theme.spacing(1),\n      }\n    },\n    title: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nconst rules: Rule[] = [\n  { id: '1', type: RuleType.SAME_STUDIO, percentage: 5, maxPercentage: 10, studioId: 'Universal' },\n  { id: '2', type: RuleType.CONTAINS_TAG, percentage: 50, maxPercentage: 100, studioId: 'Bethesda', options: { tags: ['open-world'] } },\n];\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [storeGames, setStoreGames] = useState(ALL_GAMES);\n  const [libraryGames, setLibraryGames] = useState<Game[]>([]);\n\n  useEffect(() => {\n    const libraryGameIds = libraryGames.map((game) => game.id);\n    const storeGames = ALL_GAMES.filter((game: Game) => !libraryGameIds.includes(game.id))\n    const storeGamesWithDiscount = applyDiscounts(rules, storeGames, libraryGames);\n\n    setStoreGames(storeGamesWithDiscount);\n  }, [libraryGames])\n\n  const onRemoveLibraryGame = (game: Game) => {\n    setLibraryGames((libGames) => libGames.filter((libGame) => libGame.id !== game.id));\n  };\n\n  const onBuyGame = (game: Game) => {\n    setLibraryGames((libGames) => libGames.concat(game));\n  };\n\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            Smart game discounts\n          </Typography>\n          <IconButton edge=\"start\" color=\"inherit\" aria-label=\"github\" target=\"blank\" href=\"https://github.com/Brunomachadob/smart-game-discounts\">\n            <GitHubIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.root}>\n        <Rules rules={rules}></Rules>\n        <Store games={storeGames} onBuyGame={onBuyGame} />\n        <Library games={libraryGames} onRemoveGame={onRemoveLibraryGame} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}